{"version":3,"sources":["index.js"],"names":["Square","className","this","props","isGreen","onClick","React","Component","Board","i","greenSquare","renderSquare","Game","state","gameEnded","startTime","endTime","setState","timer","setTimeout","startTiming","Math","floor","random","Date","now","console","log","gameResult","endGame","startGame","ReactDOM","render","document","getElementById"],"mappings":"mPAIMA,G,uLAEF,OACE,4BACEC,UAAWC,KAAKC,MAAMC,QAAU,eAAiB,SACjDC,QAASH,KAAKC,MAAME,c,GALPC,IAAMC,YAWrBC,E,qLACSC,GAAI,IAAD,OACVL,EAAUF,KAAKC,MAAMO,aAAeD,EACxC,OAAO,kBAACT,EAAD,CACLI,QAASA,EACTC,QAAS,kBAAM,EAAKF,MAAME,QAAQD,Q,+BAKpC,OACE,yBAAKH,UAAU,SACb,yBAAKA,UAAU,aACZC,KAAKS,aAAa,GAClBT,KAAKS,aAAa,GAClBT,KAAKS,aAAa,IAErB,yBAAKV,UAAU,aACZC,KAAKS,aAAa,GAClBT,KAAKS,aAAa,GAClBT,KAAKS,aAAa,IAErB,yBAAKV,UAAU,aACZC,KAAKS,aAAa,GAClBT,KAAKS,aAAa,GAClBT,KAAKS,aAAa,S,GAzBTL,IAAMC,WAgCpBK,E,YACJ,WAAYT,GAAQ,IAAD,8BACjB,4CAAMA,KACDU,MAAQ,CACXH,aAAc,EACdI,WAAW,EACXC,UAAW,EACXC,QAAS,GANM,E,yEAUN,IAAD,OACVd,KAAKe,SAAS,CACZH,WAAW,IAEbZ,KAAKgB,MAAQC,YAAW,kBAAM,EAAKC,gBAC/BC,KAAKC,MAAM,IAAAD,KAAKE,UAA4B,O,oCAIhDrB,KAAKe,SAAS,CACZF,UAAWS,KAAKC,MAChBf,YAAaW,KAAKC,MAAuB,EAAjBD,KAAKE,YAE/BG,QAAQC,IAAI,Q,8BAGNvB,GACFA,GACJF,KAAKe,SAAS,CACZD,QAASQ,KAAKC,MACdf,aAAc,EACdI,WAAW,M,+BAIL,IAAD,OAGDc,EAAa1B,KAAKW,MAAMC,UAAY,aAAeZ,KAAKW,MAAMG,QAAUd,KAAKW,MAAME,WAAa,OAAS,0CAC/G,OACE,yBAAKd,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACO,EAAD,CACEE,YAAaR,KAAKW,MAAMH,YACxBL,QAAS,SAAAD,GAAO,OAAI,EAAKyB,QAAQzB,OAGrC,yBAAKH,UAAU,aACb,6BAZa,wBAab,4BAAK2B,GACL,4BAAQvB,QAAS,kBAAM,EAAKyB,aAAa7B,UAAU,SAbtC,e,GAtCJK,IAAMC,WA4DzBwB,IAASC,OACP,kBAACpB,EAAD,MACAqB,SAASC,eAAe,W","file":"static/js/main.7309f9b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        className={this.props.isGreen ? \"green square\" : \"square\"}\r\n        onClick={this.props.onClick}>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    let isGreen = this.props.greenSquare == i;\r\n    return <Square\r\n      isGreen={isGreen}\r\n      onClick={() => this.props.onClick(isGreen)}\r\n    />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      greenSquare: -1,\r\n      gameEnded: false,\r\n      startTime: 0,\r\n      endTime: 0\r\n    };\r\n  }\r\n\r\n  startGame() {\r\n    this.setState({\r\n      gameEnded: false\r\n    })\r\n    this.timer = setTimeout(() => this.startTiming()\r\n      , Math.floor(Math.random() * (6000 - 3000)) + 3000)\r\n  }\r\n\r\n  startTiming() {\r\n    this.setState({\r\n      startTime: Date.now(),\r\n      greenSquare: Math.floor(Math.random() * (9))\r\n    })\r\n    console.log('hi');\r\n  }\r\n\r\n  endGame(isGreen) {\r\n    if(!isGreen) return;\r\n    this.setState({\r\n      endTime: Date.now(),\r\n      greenSquare: -1,\r\n      gameEnded: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const directions = 'Test your React-ion!';\r\n    const buttonText = \"Start\"\r\n    const gameResult = this.state.gameEnded ? \"You took \" + (this.state.endTime - this.state.startTime) + \" ms!\" : \"Click the green square when it appears!\"\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            greenSquare={this.state.greenSquare}\r\n            onClick={isGreen => this.endGame(isGreen)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{directions}</div>\r\n          <h4>{gameResult}</h4>\r\n          <button onClick={() => this.startGame()} className=\"start\">{buttonText}</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}